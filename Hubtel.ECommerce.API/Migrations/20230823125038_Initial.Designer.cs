// <auto-generated />
using System;
using Hubtel.ECommerce.API.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Hubtel.ECommerce.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230823125038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.CartEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ItemId");

                    b.ToTable("CartEntry");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CartId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Cart", b =>
                {
                    b.HasOne("Hubtel.ECommerce.API.Core.Domain.Entities.Item", null)
                        .WithMany("Carts")
                        .HasForeignKey("ItemId");

                    b.HasOne("Hubtel.ECommerce.API.Core.Domain.Entities.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Hubtel.ECommerce.API.Core.Domain.Entities.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Hubtel.ECommerce.API.Core.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CartId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CartId");

                            b1.ToTable("Cart");

                            b1.WithOwner()
                                .HasForeignKey("CartId");
                        });

                    b.Navigation("Audit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.CartEntry", b =>
                {
                    b.HasOne("Hubtel.ECommerce.API.Core.Domain.Entities.Cart", null)
                        .WithMany("CartEntries")
                        .HasForeignKey("CartId");

                    b.HasOne("Hubtel.ECommerce.API.Core.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Hubtel.ECommerce.API.Core.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CartEntryId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CartEntryId");

                            b1.ToTable("CartEntry");

                            b1.WithOwner()
                                .HasForeignKey("CartEntryId");
                        });

                    b.Navigation("Audit");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Item", b =>
                {
                    b.OwnsOne("Hubtel.ECommerce.API.Core.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ItemId");

                            b1.ToTable("Item");

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.User", b =>
                {
                    b.OwnsOne("Hubtel.ECommerce.API.Core.Domain.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime>("UpdatedAt")
                                .HasColumnType("timestamp without time zone");

                            b1.Property<string>("UpdatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Cart", b =>
                {
                    b.Navigation("CartEntries");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.Item", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("Hubtel.ECommerce.API.Core.Domain.Entities.User", b =>
                {
                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
